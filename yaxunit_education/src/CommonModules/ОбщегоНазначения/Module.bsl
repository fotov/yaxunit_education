#Область ПрограммныйИнтерфейс

// Формирует текст алгоритма в зависимости от параметров
// 
// Параметры:
//  ИмяМетода - Строка - Имя метода
//  Параметры - Неопределено, Массив из Произвольный - Параметры
// 
// Возвращаемое значение:
//  Строка - Текст алгоритма
Функция ТекстАлгоритма(ИмяМетода, Параметры = Неопределено) Экспорт
	
	СтрокиПараметров = Новый Массив;
	
	Если ТипЗнч(Параметры) = Тип("Массив")
		И Параметры.Количество() Тогда
		Для НомерПараметра = 0 По Параметры.ВГраница() Цикл
			СтрокиПараметров.Добавить(СтрШаблон("Параметры[%1]", НомерПараметра));
		КонецЦикла;
	КонецЕсли;
	
	Возврат СтрШаблон("%1(%2)", ИмяМетода, СтрСоединить(СтрокиПараметров, ", "));
		
КонецФункции

// Создает массив и копирует в него значения, содержащиеся в колонке объекта, для
// которого доступен обход посредством оператора Для каждого … Из.
//
// Параметры:
//  КоллекцияСтрок           - ТаблицаЗначений,
//                             ДеревоЗначений,
//                             СписокЗначений,
//                             ТабличнаяЧасть,
//                             Соответствие,
//                             Структура - коллекция, колонку которой нужно выгрузить в массив.
//                                         А так же другие объекты, для которых доступен обход
//                                         посредством оператора Для каждого … Из … Цикл.
//  ИмяКолонки               - Строка - имя поля коллекции, значения которого нужно выгрузить.
//  ТолькоУникальныеЗначения - Булево - если Истина, то в массив будут включены
//                                      только различающиеся значения.
//
// Возвращаемое значение:
//  Массив из Произвольный - значения колонки.
//
Функция ВыгрузитьКолонку(КоллекцияСтрок, ИмяКолонки, ТолькоУникальныеЗначения = Ложь) Экспорт

	МассивЗначений = Новый Массив;
	
	УникальныеЗначения = Новый Соответствие;
	
	Для каждого СтрокаКоллекции Из КоллекцияСтрок Цикл
		Значение = СтрокаКоллекции[ИмяКолонки];
		Если ТолькоУникальныеЗначения И УникальныеЗначения[Значение] <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		МассивЗначений.Добавить(Значение);
		УникальныеЗначения.Вставить(Значение, Истина);
	КонецЦикла; 
	
	Возврат МассивЗначений;
	
КонецФункции

// Значение из JSON.
// 
// Параметры:
//  ЗначениеJSONСтрокой - Строка - Значение JSONСтрокой
// 
// Возвращаемое значение:
//  Неопределено, Произвольный - Значение из JSON
Функция ЗначениеИзJSON(ЗначениеJSONСтрокой) Экспорт
	
	Результат = Неопределено;
	
	Если ТипЗнч(ЗначениеJSONСтрокой) = Тип("Строка") Тогда
		Попытка
			Чтение = Новый ЧтениеJSON;
			Чтение.УстановитьСтроку(ЗначениеJSONСтрокой);
			Результат = ПрочитатьJSON(Чтение);
		Исключение
			Результат = Неопределено;
		КонецПопытки;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти